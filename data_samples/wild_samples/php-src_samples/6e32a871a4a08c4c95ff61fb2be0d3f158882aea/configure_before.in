## $Id$ -*- autoconf -*-
dnl ## Process this file with autoconf to produce a configure script.

divert(1)

dnl ## Diversion 1 is the autoconf + automake setup phase. We also
dnl ## set the PHP version, deal with platform-specific compile
dnl ## options and check for the basic compile tools.

dnl ## Diversion 2 is the initial checking of OS features, programs,
dnl ## libraries and so on.

dnl ## In diversion 3 we check for compile-time options to the PHP
dnl ## core and how to deal with different system dependencies. 
dnl ## This includes whether debugging or short tags are enabled
dnl ## and the default behaviour of php.ini options.
dnl ## This is also where an SAPI interface is selected (choosing between
dnl ## Apache module, CGI etc.)

dnl ## In diversion 4 we check user-configurable general settings.

dnl ## In diversion 5 we check which extensions should be compiled.
dnl ## All of these are normally in the extension directories.
dnl ## Diversion 5 is the last one.  Here we generate files and clean up.

dnl include Zend specific macro definitions first
dnl -------------------------------------------------------------------------
sinclude(Zend/acinclude.m4)

dnl Basic autoconf + automake initialization, generation of config.nice.
dnl -------------------------------------------------------------------------

AC_PREREQ(2.13)
AC_INIT(README.GIT-RULES)

PHP_CONFIG_NICE(config.nice)

PHP_CANONICAL_HOST_TARGET

AC_CONFIG_HEADER(main/php_config.h)

PHP_MAJOR_VERSION=5
PHP_MINOR_VERSION=3
PHP_RELEASE_VERSION=27
PHP_EXTRA_VERSION="-dev"
PHP_VERSION="$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION"
PHP_VERSION_ID=`expr [$]PHP_MAJOR_VERSION \* 10000 + [$]PHP_MINOR_VERSION \* 100 + [$]PHP_RELEASE_VERSION`

dnl Allow version values to be used in Makefile
PHP_SUBST(PHP_MAJOR_VERSION)
PHP_SUBST(PHP_MINOR_VERSION)
PHP_SUBST(PHP_RELEASE_VERSION)
PHP_SUBST(PHP_EXTRA_VERSION)

dnl Define where extension directories are located in the configure context
AC_DEFUN([PHP_EXT_BUILDDIR],[ext/$1])dnl
AC_DEFUN([PHP_EXT_DIR],[ext/$1])dnl
AC_DEFUN([PHP_EXT_SRCDIR],[$abs_srcdir/ext/$1])dnl
AC_DEFUN([PHP_ALWAYS_SHARED],[])dnl

dnl Setting up the PHP version based on the information above.
dnl -------------------------------------------------------------------------

echo "/* automatically generated by configure */" > php_version.h.new
echo "/* edit configure.in to change version number */" >> php_version.h.new
echo "#define PHP_MAJOR_VERSION $PHP_MAJOR_VERSION" >> php_version.h.new
echo "#define PHP_MINOR_VERSION $PHP_MINOR_VERSION" >> php_version.h.new
echo "#define PHP_RELEASE_VERSION $PHP_RELEASE_VERSION" >> php_version.h.new
echo "#define PHP_EXTRA_VERSION \"$PHP_EXTRA_VERSION\"" >> php_version.h.new
echo "#define PHP_VERSION \"$PHP_VERSION\"" >> php_version.h.new
echo "#define PHP_VERSION_ID $PHP_VERSION_ID" >> php_version.h.new
cmp php_version.h.new $srcdir/main/php_version.h >/dev/null 2>&1
if test $? -ne 0 ; then
  rm -f $srcdir/main/php_version.h && mv php_version.h.new $srcdir/main/php_version.h && \
  echo 'Updated main/php_version.h'
else
  rm -f php_version.h.new
fi


dnl Catch common errors here to save a few seconds of our users' time
dnl -------------------------------------------------------------------------

if test "$with_shared_apache" != "no" && test -n "$with_shared_apache" ; then
  AC_MSG_ERROR([--with-shared-apache is not supported. Please refer to the documentation for using APXS])
fi

if test -n "$with_apache" && test -n "$with_apxs"; then
  AC_MSG_ERROR([--with-apache and --with-apxs cannot be used together])
fi

if test -n "$with_apxs2filter" && test -n "$with_apxs2"; then
  AC_MSG_ERROR([--with-apxs2filter and --with-apxs2 cannot be used together])
fi

  
dnl Settings we want to make before the checks.
dnl -------------------------------------------------------------------------

cwd=`pwd`

php_shtool=$srcdir/build/shtool
T_MD=`$php_shtool echo -n -e %B`
T_ME=`$php_shtool echo -n -e %b`

PHP_INIT_BUILD_SYSTEM

dnl We want this one before the checks, so the checks can modify CFLAGS.
test -z "$CFLAGS" && auto_cflags=1

abs_srcdir=`(cd $srcdir; pwd)`
abs_builddir=`pwd`

php_abs_top_srcdir=$abs_srcdir
php_abs_top_builddir=$abs_builddir

dnl Because ``make install'' is often performed by the superuser,
dnl we create the libs subdirectory as the user who configures PHP.
dnl Otherwise, the current user will not be able to delete libs
dnl or the contents of libs.

$php_shtool mkdir -p libs
rm -f libs/*

dnl Checks for programs.
dnl -------------------------------------------------------------------------

AC_PROG_CC([cc gcc])
PHP_DETECT_ICC
PHP_DETECT_SUNCC
AC_PROG_CC_C_O
dnl Change to AC_PROG_CC_STDC when we start requiring a post-2.13 autoconf
dnl AC_PROG_CC_STDC
AC_PROG_CPP
AC_AIX
AC_PROG_LN_S

dnl Support systems with system libraries in e.g. /usr/lib64
PHP_ARG_WITH(libdir, for system library directory,
[  --with-libdir=NAME      Look for libraries in .../NAME rather than .../lib],lib,no)

PHP_ARG_ENABLE(rpath, whether to enable runpaths,
[  --disable-rpath         Disable passing additional runtime library
                          search paths], yes, no)

dnl check for -R, etc. switch
PHP_RUNPATH_SWITCH

dnl Checks for some support/generator progs
PHP_PROG_AWK
PHP_PROG_BISON
PHP_PROG_RE2C

dnl Check if bison generated files exist when bison does not..
case $php_cv_bison_version in
  ""|invalid[)]
    if ! test -f "$abs_srcdir/Zend/zend_language_parser.h" || ! test -f "$abs_srcdir/Zend/zend_language_parser.c" ; then
      AC_MSG_ERROR([bison is required to build PHP/Zend when building a GIT checkout!])
    fi
    ;;
esac

PHP_ARG_ENABLE(re2c-cgoto, whether to enable computed goto gcc extension with re2c,
[  --enable-re2c-cgoto     Enable -g flag to re2c to use computed goto gcc extension], no, no)

if test "$PHP_RE2C_CGOTO" = "no"; then
  RE2C_FLAGS=""
else
  AC_MSG_CHECKING([whether re2c -g works])
  AC_TRY_COMPILE([],[
int main(int argc, const char **argv)
{
  argc = argc;
  argv = argv;
label1:
label2:
  static void *adr[] = { &&label1, &&label2};
  goto *adr[0];
  return 0;
}